import type { NextPage } from 'next';
import Head from 'next/head';
import { Button, Input } from '~/shared/components';
import { globalStyles } from '~/shared/styles/reset';
import { trpc } from '~/server/utils/trpc';

const Home: NextPage = () => {
  globalStyles();
  const helloCache = trpc.useQuery(['hello.getAll', { text: 'client' }]);
  const appsCache = trpc.useQuery(['app.getAll']);
  const addApp = trpc.useMutation(['app.add']);

  const onSubmitHandler = async (event: any) => {
    event.preventDefault();

    const name = event.target.elements.name.value;
    const type = event.target.elements.type.value;
    const priority = Number(event.target.elements.priority.value);
    const notes = event.target.elements.notes.value;

    try {
      await addApp.mutateAsync({
        name,
        type,
        priority,
        notes,
      });
    } catch (error) {
      console.log('could not udpate');
    }
  };

  if (!helloCache.data) {
    return <div>Loading...</div>;
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1>Apps to build</h1>
      {appsCache.data?.map(({ name, priority }) => (
        <div key={`${name}-${priority}`}>name: {name}</div>
      ))}
      <br />
      <br />
      <br />

      <form id="form" onSubmit={onSubmitHandler}>
        <div>
          <Input label="name" name="name" placeholder="name of application" />
        </div>
        <div>
          <Input label="type" name="type" placeholder="type of application" />
        </div>
        <div>
          <Input type="text" label="priority" name="priority" placeholder="priority of application" />
        </div>
        <div>
          <Input label="notes" name="notes" placeholder="notes of application" />
        </div>
        <Button type="submit">Add</Button>
      </form>
    </div>
  );
};

export default Home;
